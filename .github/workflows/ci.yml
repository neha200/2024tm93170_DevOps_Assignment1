name: CI (feature push + merged PR; gated by CHANGELOG.md; push API & Web images)

on:
  # Dev CI on feature branches â€“ only when CHANGELOG.md is touched
  push:
    branches: ['feature/**']
    paths:
      - 'CHANGELOG.md'
      - '.github/workflows/ci.yml'  # optional: run when workflow itself changes

  # Release CI when a PR to main is closed (we will check merged==true)
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  # ---------- Dev CI on feature/* pushes ----------
  feature-build-test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1  # only current commit is needed

      - name: Verify CHANGELOG entry on feature push
        run: |
          set -e
          # Ensure the current commit adds a new "## " heading to CHANGELOG.md
          if git show --unified=0 HEAD -- CHANGELOG.md | grep -E "^\+## "; then
            echo "CHANGELOG entry found."
          else
            echo "No new '## ' entry added to CHANGELOG.md"
            exit 1
          fi

      - name: Build Docker image (API) for tests
        run: docker build -t app:${{ github.sha }} .

      - name: Run tests in container
        run: docker run --rm app:${{ github.sha }} pytest -q

      - name: Smoke /health (API)
        run: |
          CID=$(docker run -d -p 8000:8000 app:${{ github.sha }})
          sleep 2
          curl -fsS http://localhost:8000/health | grep -q '"ok"'
          docker rm -f "$CID" >/dev/null 2>&1 || true

# ---------- Release CI when PR is merged to main ----------
  release-build-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    steps:
      # Check out the MERGE COMMIT that landed on main
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: 0  # need base & merge history for diff

      - name: Detect CHANGELOG change between base and merge
        id: changelog
        run: |
          set -e
          BASE=${{ github.event.pull_request.base.sha }}
          HEAD=${{ github.event.pull_request.merge_commit_sha }}
          echo "Base: $BASE"
          echo "Head: $HEAD"
          if git diff --name-only "$BASE" "$HEAD" | grep -x "CHANGELOG.md"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop if CHANGELOG.md did not change
        if: steps.changelog.outputs.changed != 'true'
        run: |
          echo "CHANGELOG.md not changed; skipping release build."
          exit 78  # neutral

      - name: Build Docker image (API) for tests
        run: docker build -t app:${{ github.sha }} .

      - name: Run tests in container
        run: docker run --rm app:${{ github.sha }} pytest -q

      - name: Smoke /health (API)
        run: |
          CID=$(docker run -d -p 8000:8000 app:${{ github.sha }})
          sleep 2
          curl -fsS http://localhost:8000/health | grep -q '"ok"'
          docker rm -f "$CID" >/dev/null 2>&1 || true

# ---------- Push BOTH images (API + Web) to Docker Hub after successful release build ----------
  push-to-docker-hub:
    needs: release-build-test
    if: needs.release-build-test.result == 'success'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: api
            file: Dockerfile
            tag_latest: latest
            tag_sha: api-${{ github.sha }}
          - name: web
            file: Dockerfile.web
            tag_latest: web-latest
            tag_sha: web-${{ github.sha }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.file }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/aceest-fitness:${{ matrix.tag_latest }}
            ${{ secrets.DOCKERHUB_USERNAME }}/aceest-fitness:${{ matrix.tag_sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-to: type=inline
